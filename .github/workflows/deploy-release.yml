name: CI/CD deploy release

on:
  push:
    branches: ["deploy-release"]
  pull_request:
    branches: ["deploy-release"]

permissions:
  contents: write

jobs:
  ci_cd_deploy_release:
    runs-on: ubuntu-latest

    steps:
      # 1) Clonar TODO el repo y apuntar a deploy‑release
      - uses: actions/checkout@v3
        with:
          ref: deploy-release    # ¡clonamos esa rama, no un SHA detached!
          fetch-depth: 0         # para que traiga todo el historial

      # … pasos 2–8 idénticos …

      # 9) Commit & push docs SOBRE LA MISMA RAMA
      - name: GIT commit and push docs
        env:
          CI_COMMIT_MESSAGE: save spark results
          CI_COMMIT_AUTHOR: adsoft
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "adsoft@live.com.mx"
          git add docs
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}" || echo "No changes to commit"
          git push               # ahora sí será un fast‑forward limpio

      - name: Build the custom Docker image
        run: |
          docker commit \
            --change "ENV MODEL_NAME=${{ secrets.MODEL_NAME }}" \
            serving_base \
            ${{ secrets.DOCKER_USER }}/${{ secrets.MODEL_NAME }}:${{ github.sha }}

      - name: Show Docker images
        run: docker images

      - name: Docker login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

      - name: Docker Push
        run: docker push ${{ secrets.DOCKER_USER }}/${{ secrets.MODEL_NAME }}:${{ github.sha }}
