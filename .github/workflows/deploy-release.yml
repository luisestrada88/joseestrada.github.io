name: CI/CD deploy release

on:
  push:
    branches: ["deploy-release"]
  pull_request:
    branches: ["deploy-release"]

permissions:
  contents: write

jobs:
  ci_cd_deploy_release:
    runs-on: ubuntu-latest

    steps:
      # 1) Clona tu repositorio
      - uses: actions/checkout@v2

      # 2) Mensaje de prueba
      - run: echo 'hello world'

      # 3) Usa Node.js 20.x
      - name: Use Node.js 20.x
        uses: actions/setup-node@v1
        with:
          node-version: 20.x

      # 4) Instala dependencias
      - name: install dependencies
        run: npm ci

      # 5) Ejecuta el build de Angular
      - name: build setup
        run: npm run build -- --configuration production

      # 6) Lista tu carpeta de salida
      - name: list dir
        run: ls -la dist/mycv/browser

      # 7) Copia el contenido de dist/... a docs/
      - name: copy index.html, css, js
        run: |
          mkdir -p docs
          cp -R dist/mycv/browser/. docs/

      # 8) Verifica que docs/ tengan algo
      - name: list docs
        run: ls -la docs

      # 9) Commit & push docs/ de vuelta a la rama
      - name: GIT commit and push docs
        env:
          CI_COMMIT_MESSAGE: save spark results
          CI_COMMIT_AUTHOR: adsoft
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "adsoft@live.com.mx"
          git checkout deploy-release     # Aseg√∫rate de estar en la rama correcta
          git add docs
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}" || echo "No changes to commit"
          git push origin deploy-release
